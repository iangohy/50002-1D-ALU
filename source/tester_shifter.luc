module tester_shifter (
    input clk,  // clock
    input rst,  // reset
    output counter[8],
    output error
  ) {
  
  fsm testerfsm(.clk(clk), .rst(rst)) = {INIT,SHL,SHR,SHA,END};
  counter slowClock(#SIZE(1), #DIV(26), .clk(clk), .rst(rst));
  counter slowCounter(#SIZE(5), #DIV(26), .clk(clk), .rst(rst));
  edge_detector slowClockEdge(.clk(clk));
  tester_rom testerrom; 
  shifter testshifter;
  
  sig romdata[60];

  always {
    slowClockEdge.in = slowClock.value;
    
    // base outputs
    counter = 5b0;
    error = 0;
    testerrom.address = 0;
    testshifter.a = 0;
    testshifter.b = 0;
    testshifter.alufn = 0;
    
    case(testerfsm.q) {  
      testerfsm.INIT:
        if (slowClockEdge.out == b1) { //only trigger change when slowClockEdge gives a 1
          testerfsm.d = testerfsm.SHL;
        }   
      testerfsm.SHL:
        counter = slowClock.value;
        testerrom.address = slowCounter.value;
        counter = slowCounter.value;
        romdata = testerrom.testcase;
        testshifter.a = romdata[59:44];
        testshifter.b = romdata[31:28];
        testshifter.alufn = romdata[21:20];
        
        // ignore zvn for shifter test
        if (testshifter.s == romdata[19:4]) {
          error = 0;
        } else {
          error = 1;
        }
        
        if (slowClockEdge.out == b1) { //only trigger change when slowClockEdge gives a 1
          testerfsm.d = testerfsm.SHR;
        }
        
      testerfsm.SHR:
        counter = slowCounter.value;
        testerrom.address = slowCounter.value;
        counter = slowCounter.value;
        romdata = testerrom.testcase;
        testshifter.a = romdata[59:44];
        testshifter.b = romdata[31:28];
        testshifter.alufn = romdata[21:20];
        
        // ignore zvn for shifter test
        if (testshifter.s == romdata[19:4]) {
          error = 0;
        } else {
          error = 1;
        }
        
        if (slowClockEdge.out == b1) { //only trigger change when slowClockEdge gives a 1
          testerfsm.d = testerfsm.SHA;
        }
        
      testerfsm.SHA:
        counter = slowCounter.value;
        testerrom.address = slowCounter.value;
        counter = slowCounter.value;
        romdata = testerrom.testcase;
        testshifter.a = romdata[59:44];
        testshifter.b = romdata[31:28];
        testshifter.alufn = romdata[21:20];
        
        // ignore zvn for shifter test
        if (testshifter.s == romdata[19:4]) {
          error = 0;
        } else {
          error = 1;
        }
        
        if (slowClockEdge.out == b1) { //only trigger change when slowClockEdge gives a 1
          testerfsm.d = testerfsm.END;
        }
        
      testerfsm.END:
        counter = 8hFF;
        error = 0;
    }
  }
}
